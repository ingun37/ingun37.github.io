{"version":3,"sources":["FeaturesSec.scss","serviceWorker.js","FeaturesSec.js","PortraitSec.js","Coverage.js","Writes.js","Icons.js","Bar.js","BGs.js","index.js"],"names":["module","exports","desktopbp","Boolean","window","location","hostname","match","desktopBreakpoint","parseInt","scss","shift","MyCell","withSizes","_ref","isDesktop","width","props","color","img","title","desc","react_default","a","createElement","dist","columns","tabletColumns","phoneColumns","react_card_dist_default","className","concat","react_card_dist","imageUrl","process","style","height","DesktopCell","MobileCell","MyGrid","FeaturesSec","React","Component","PortraitSec","posed","div","_posed$div","Object","defineProperty","toString","rotate","transition","ease","duration","state","deg","_this2","this","setInterval","setState","maskImage","WebkitMaskImage","Coverage","es","settings","labelThreshold","defaultNodeColor","defaultLabelColor","mouseEnabled","touchEnabled","sideMargin","path","parser","require","customFields","item","keepArray","MenuItem","idx","date","key","square","Arrow","_ref2","text","Writes","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rssContent","parseURL","onSelect","items","length","onMoreClick","onCardClick","then","feed","forEach","i","thumbnail","th","$","url","contents","map","c","filter","u","find","includes","err","console","error","unpackthum","slice","link","open","rssItemlist","menu","Writes_MenuItem","pubDate","react_button_dist_default","raised","trailingIcon","react_material_icon_dist_default","icon","build_default","data","RippleWrapper","children","_props$className","initRipple","otherProps","unbounded","objectWithoutProperties","classes","assign","ref","Icon","_props$img","_props$color","onClick","svgpath","backgroundColor","Icons_RippleWrapper","Bar","_React$Component","apply","arguments","inherits","createClass","value","href","react_top_app_bar_dist_default","shortCollapsed","react_top_app_bar_dist","navIcon","tabIndex","hasRipple","onMail","onGithub","onWordpress","ran","toConsumableArray","Array","keys","BGDiv","visible","opacity","scale","type","rot","values","n","flat","times","arr","hidden","fadeaway","SunBG","pose","CityBG","CompassBG","dayColor","SkyDiv","src_posed$div","App","sunState","cityState","skyColor","compassState","origin","destination","direction","log","index","BGs_SunBG","react_fullpage_default","touchSensitivity","onLeave","bind","render","fullpageApi","Wrapper","zIndex","src_PortraitSec_0","src_FeaturesSec_0","src_Coverage_0","src_Writes_0","Bar_Bar","renderContent","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c5b6b4a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"desktopbp\":\"840px\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\nimport { default as scss } from \"./FeaturesSec.scss\"\nimport \"./contentpanel.scss\"\nimport \"./cards.scss\"\nimport \"./font.scss\"\nimport withSizes from 'react-sizes'\n\nimport Card, {\n    CardPrimaryContent,\n    CardMedia,\n    CardActions,\n    CardActionButtons,\n    CardActionIcons\n} from \"@material/react-card\";\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\n\nfunction DesktopCell(props) {\n    const {\n        width, color, img, title, desc\n    } = props;\n    return (\n        <Cell columns={width} tabletColumns={12} phoneColumns={12}>\n            <Card className={`MyCard DesktopCard roundcard ${color}`} >\n                <CardMedia imageUrl={process.env.PUBLIC_URL + `/${img}.svg`} style={{ height: \"100%\" }}>\n                    <div className=\"blackDiv\">\n                        <div className='sectionh2 head'>{title}</div>\n                        <div className='mdc-typography--caption sub'>{desc}</div>\n                    </div>\n                </CardMedia>\n            </Card>\n        </Cell>\n    )\n}\n\nfunction MobileCell(props) {\n    const {\n        color, img, title, desc\n    } = props;\n    return (\n        <Cell columns={12} tabletColumns={12} phoneColumns={12}>\n            <Card className={`MyCard MobileCard roundcard ${color}`} >\n                <CardMedia imageUrl={process.env.PUBLIC_URL + `/${img}.svg`} style={{ height: \"100%\" }}>\n                    <div className=\"blackDiv\">\n                        <div className='sectionh2 head'>{title}</div>\n                        <div className='mdc-typography--caption sub'>{desc}</div>\n                    </div>\n                </CardMedia>\n            </Card>\n        </Cell>\n    )\n}\nconst desktopBreakpoint = parseInt(scss.desktopbp.match(/^\\d+/g).shift() || '840')\n\nconst mapSizesToProps = ({ width }) => ({\n    isDesktop: width >= desktopBreakpoint,\n})\n\nfunction CondCell(props) {\n    if (props.isDesktop) {\n        return DesktopCell(props)\n    } else {\n        return MobileCell(props)\n    }\n}\n\nconst MyCell = withSizes(mapSizesToProps)(CondCell)\n\nfunction MyGrid() {\n    return (\n        <Grid className='featuresgrid'>\n            <Row>\n                <MyCell width={4} color='greencard' img='bridge' title='Global' desc='전 세계 개발자들과의 활발한 소통' />\n                <MyCell width={4} color='pinkcard' img='glasses' title='Good Hipster' desc='신뢰할 수 있는 앞서가는 정보력' />\n                <MyCell width={4} color='bluecard' img='flash' title='Quick' desc='뭐든 언제나 빠른 이해, 생각, 행동' />\n                <MyCell width={6} color='bluecard' img='runner' title='Discipline' desc='어려운것, 모르는것은 지금 당장 공부해서 치워야하는 똥' />\n                <MyCell width={6} color='pinkcard' img='saber' title='Young Jedi' desc='12년의 경험: 꼬마시절부터 걷기시작한 개발자의 길' />\n            </Row>\n        </Grid>\n    );\n}\n\nclass FeaturesSec extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"sectiontitle\">I BE LIKE</div>\n                <div className=\"gridWrapper contentpanel\">\n                    <MyGrid />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FeaturesSec;\n","import React from 'react';\nimport \"./PortraitSec.scss\"\nimport \"./contentpanel.scss\"\nimport posed from \"react-pose\";\nconst deg15 = 15\nconst deg0 = 0\n\nconst RotatingDiv = posed.div({\n    [deg0.toString()]: { rotate: deg0, transition: { ease: 'linear', duration: 0 } },\n    [deg15.toString()]: { rotate: deg15, transition: { ease: 'linear', duration: 0 } }\n});\n\nclass PortraitSec extends React.Component {\n    state = { deg: 0 }\n    componentDidMount() {\n        setInterval(() => {\n            this.setState({ deg: this.state.deg == deg0 ? deg15 : deg0 })\n        }, 300);\n    }\n    render() {\n        const svgpath = process.env.PUBLIC_URL + '/face.svg'\n\n        return (\n            <div className='PortraitSec'>\n                <div className='sectiontitle title'>INTRODUCING</div>\n                <div className='centerer'>\n                    <div className='circle'>\n                    <div className=\"PortraitImage\" style={{ maskImage: `url(${svgpath})`, WebkitMaskImage: `url(${svgpath})` }} />\n                    </div>\n                </div>\n                <div className='sectiontitle title'>JON IN GUN</div>\n            </div>\n        );\n    }\n}\n\nexport default PortraitSec;\n\n//{/* <RotatingDiv pose={this.state.deg.toString()} className=\"Sun\" style={{ maskImage: `url(${svgpath})`, WebkitMaskImage: `url(${svgpath})`, zIndex: -1}} /> */}","import React from 'react';\nimport \"./Coverage.scss\"\nimport \"./contentpanel.scss\"\nimport \"./font.scss\"\nimport { Sigma, RandomizeNodePositions, RelativeSize, LoadJSON } from 'react-sigma';\n\nclass Coverage extends React.Component {\n    render() {\n        const setting = {\n            labelThreshold: 0,\n            defaultNodeColor: 'rgb(233, 229, 16)',\n            defaultLabelColor: 'rgb(236, 194, 210)',\n            mouseEnabled: false,\n            touchEnabled: false,\n            sideMargin: 0.6,\n            // font: 'Roboto',\n        }\n        return (\n            <div className=\"Coverage\">\n                <h1 className=\"sectiontitle\">COVERAGE</h1>\n                <div className=\"contentpanel coveragepanel\">\n                    <Sigma settings={setting} >\n                        <LoadJSON path={process.env.PUBLIC_URL + \"/graph-data.json\"} />\n                    </Sigma>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Coverage;","import React from 'react';\nimport \"./Writes.scss\"\nimport \"./cards.scss\"\nimport \"./contentpanel.scss\"\nimport IconButton from '@material/react-icon-button';\nimport MaterialIcon from '@material/react-material-icon';\nimport Card, {\n    CardPrimaryContent,\n    CardMedia,\n} from \"@material/react-card\";\nimport Button from '@material/react-button';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\n\nlet Parser = require('rss-parser');\nlet parser = new Parser({\n    customFields: {\n        item: [\n            ['media:thumbnail', 'thumbnail'],\n            ['media:content', 'contents', { keepArray: true }],\n        ],\n    }\n});\nfunction unpackthum(item) {\n    try {\n        const th = ((item.thumbnail || {}).$ || {}).url || null;\n        if (th) return th;\n        return item.contents.map(c => (c.$ || {}).url).filter(u => u).find(u => u.includes('.png') || u.includes('.jpg')) || null\n    } catch (err) {\n        console.error(err)\n        return null\n    }\n}\n\nconst MenuItem = ({ idx, img, title, date }) => {\n    return (\n        <Card key={idx.toString()} className='writecard roundcard'>\n            <CardMedia square imageUrl={img} />\n            <span className='writetitle'>{title}</span>\n            <span className='writedate'>{date}</span>\n        </Card>\n    );\n};\n\nexport const Menu = (rssItemlist) =>\n    rssItemlist.map((item, idx) => {\n        return <MenuItem idx={idx} key={idx.toString()} img={item.thumbnail} title={item.title} date={item.pubDate.slice(0, 'Tue, 02 Apr 2019'.length)} />;\n    }).concat([(\n        <div className='morediv' key={rssItemlist.length.toString()}>\n            <h1 className='moretitle'></h1>\n            <Button className='morebutton' raised={true} trailingIcon={<MaterialIcon icon='forward' />} >\n                SEE MORE\n    </Button>\n        </div>\n    )]);\n\n\nconst Arrow = ({ text, className }) => {\n    return (\n        <div\n            className={className}\n        >{text}</div>\n    );\n};\n\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\n\nclass Writes extends React.Component {\n    rssContent = parser.parseURL(process.env.PUBLIC_URL + `/wordpress-rss.xml`)\n    constructor(props) {\n        super(props);\n        // call it again if items count changes\n        this.state = { items: [] }\n    }\n    componentDidMount() {\n        this.rssContent.then(feed => {\n            let items = feed.items;\n            items.forEach(i => i.thumbnail = unpackthum(i))\n            this.setState({\n                items: items.filter(i => i.thumbnail).slice(0, 6)\n            })\n        })\n    }\n    onCardClick(idx) {\n        const url = this.state.items[idx].link;\n        window.open(url, '_blank');\n    }\n    onMoreClick() {\n        const url = 'https://ingun37.wordpress.com';\n        window.open(url, '_blank');\n    }\n    onSelect = key => {\n        const idx = parseInt(key)\n        if (idx == this.state.items.length) {\n            this.onMoreClick()\n        } else {\n            this.onCardClick(idx)\n        }\n    }\n    render() {\n        // Create menu from items\n        const menu = Menu(this.state.items);\n        return (\n            <div>\n                <h1 className='sectiontitle'>I WRITE THINGS</h1>\n                <div className=\"Writes contentpanel\">\n                    <ScrollMenu\n                        data={menu}\n                        onSelect={this.onSelect}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Writes;","import React from 'react';\nimport Octicon, { iconsByName } from '@githubprimer/octicons-react'\nimport './Icons.scss'\nimport { withRipple } from '@material/react-ripple';\n\nconst RippleWrapper = (props) => {\n  const {\n    children,\n    className = '',\n    // You must call `initRipple` from the root element's ref. This attaches the ripple\n    // to the element.\n    initRipple,\n    // include `unbounded` to remove warnings when passing `otherProps` to the\n    // root element.\n    unbounded,\n    ...otherProps\n  } = props;\n\n  // any classes needed on your component needs to be merged with\n  // `className` passed from `props`.\n  const classes = `ripple-icon-component ${className}`;\n\n  return (\n    <div\n      className={classes}\n      ref={initRipple}\n      {...otherProps}>\n      {children}\n    </div>\n  );\n};\n\nexport function Icon(props) {\n  const {\n    img = 'github',\n    color = 'red',\n    onClick,\n  } = props;\n  const svgpath = 'url(' + process.env.PUBLIC_URL + `/${img}.svg)`\n  const style = { maskImage: svgpath, WebkitMaskImage: svgpath, backgroundColor: color}\n  return (\n    <RippleWrapper className='ripplewrapper' onClick={onClick}>\n      <div className='iconwrapper'>\n        <div className='iconimg' style={style}/>\n      </div>\n    </RippleWrapper>\n  )\n}\n\n//src={}\n/*\n<Github onClick={()=>{console.log('yeah!')}}>\n                <img src={process.env.PUBLIC_URL + `/face.svg`} style={{width:'100%', height:'100%'}} />\n              </Github>\n*/","import React from 'react';\nimport '@material/react-top-app-bar/index.scss';\nimport '@material/react-material-icon/index.scss';\nimport TopAppBar, {\n  TopAppBarFixedAdjust,\n  TopAppBarIcon,\n  TopAppBarRow,\n  TopAppBarSection,\n  TopAppBarTitle,\n} from '@material/react-top-app-bar';\nimport MaterialIcon from '@material/react-material-icon';\nimport { Icon } from \"./Icons\";\n\nexport class Bar extends React.Component {\n  onMail() {\n    window.location.href = `mailto:ingun37@gmail.com`;\n  }\n  onGithub() {\n    window.open(\"https://github.com/ingun37\", '_blank');\n  }\n  onWordpress() {\n    window.open(\"https://ingun37.wordpress.com\", '_blank');\n  }\n  render() {\n    return (\n      <TopAppBar shortCollapsed={true} style={{ width: '144px' }}>\n        <TopAppBarRow>\n          <TopAppBarIcon navIcon tabIndex={0}>\n            <MaterialIcon hasRipple icon='email' onClick={this.onMail} />\n          </TopAppBarIcon>\n          <TopAppBarIcon navIcon >\n            <Icon img=\"github\" color=\"white\" onClick={this.onGithub} />\n          </TopAppBarIcon>\n          <TopAppBarIcon navIcon >\n            <Icon img=\"wordpress\" color=\"white\" onClick={this.onWordpress} />\n          </TopAppBarIcon>\n        </TopAppBarRow>\n      </TopAppBar>\n    )\n  }\n}","import React from 'react';\nimport posed from \"react-pose\";\nimport './BGs.scss'\nlet tot = 10\nlet ran = [...new Array(tot).keys()]\nconst BGDiv = posed.div({\n    visible: {\n        opacity: 1,\n        scale: 1, rotate: 0,\n        transition: {\n            scale: {\n                ease: 'linear',\n                duration: 500\n            },\n            rotate: {\n                type: 'spring',\n                duration: 500\n            }\n        }\n    },\n    rot: {\n        scale: 1, rotate: 0, opacity: 1,\n        transition: {\n            scale: {\n                ease: 'linear',\n                duration: 500\n            },\n            rotate: {\n                type: 'keyframes',\n                values: [0].concat(ran.map(n=>n%2==0 ? [0, 15] : [15,0]).flat()),\n                times:  ran.map((n, i, arr)=>[n/tot, (n+1)/tot-0.001]).flat().concat([1]),\n                duration: 5000,\n            }\n        }\n    },\n    hidden: { scale: 0, rotate: 180, opacity: 0, transition: { ease: 'linear', duration: 500 } },\n    fadeaway: { scale: 1, rotate: 0, opacity: 0, transition: { ease: 'linear', duration: 500 } },\n});\n\nexport class SunBG extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { state: props.state }\n    }\n    componentDidMount() {\n    }\n\n    render() {\n        const sunURL = 'url(' + process.env.PUBLIC_URL + '/sun.svg' + ')'\n        return (\n            <BGDiv className=\"MyBG contain\"\n                pose={this.props.state}\n                style={{\n                    \"maskImage\": sunURL,\n                    \"WebkitMaskImage\": sunURL,\n                    backgroundColor: 'rgb(218, 199, 30)'\n                }}\n            />\n        )\n    }\n}\nexport function CityBG(props) {\n    const citysvgURL = 'url(' + process.env.PUBLIC_URL + '/city.svg' + ')'\n    return (\n        <BGDiv className=\"MyBG contain\"\n            pose={props.state}\n            style={{ \"maskImage\": citysvgURL, \"WebkitMaskImage\": citysvgURL, backgroundColor: 'rgb(223, 29, 62)' }}\n        />\n    )\n}\nexport function CompassBG(props) {\n    const compasssvgURL = 'url(' + process.env.PUBLIC_URL + '/compass.svg' + ')'\n    return (\n        <BGDiv className=\"MyBG contain\"\n            pose={props.state}\n            style={{ \"maskImage\": compasssvgURL, \"WebkitMaskImage\": compasssvgURL, backgroundColor: 'rgb(223, 29, 62)', opacity: 0.2 }}\n        />\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport FeaturesSec from \"./FeaturesSec\";\nimport PortraitSec from \"./PortraitSec\";\nimport Coverage from \"./Coverage\";\nimport Writes from \"./Writes\";\nimport posed from \"react-pose\";\n\nimport { Bar } from \"./Bar\";\nimport {SunBG, CityBG, CompassBG} from './BGs'\nconst dayColor = \"rgb(223, 29, 62)\"\nconst nightColor = \"rgb(11, 16, 77)\"\nconst coverageColor = 'rgb(226, 139, 153)'\nconst skyblueColor = 'rgb(141, 191, 211)'\n\n\nconst SkyDiv = posed.div({\n  [dayColor]: { backgroundColor: dayColor },\n  [nightColor]: { backgroundColor: nightColor },\n  [coverageColor]: { backgroundColor: coverageColor },\n  [skyblueColor]: { backgroundColor: skyblueColor },\n})\n\nclass App extends React.Component {\n  state = { sunState: 'hidden', cityState: 'hidden', skyColor: dayColor, compassState: 'hidden' }\n\n  onLeave(origin, destination, direction) {\n    console.log('onLeave', { origin, destination, direction });\n    if (origin.index == 0 && destination.index == 1) {\n      this.setState({ sunState: 'fadeaway', cityState: 'visible', skyColor: nightColor })\n    } else if (origin.index == 1 && destination.index == 0) {\n      this.setState({ sunState: 'rot', cityState: 'hidden', skyColor: dayColor })\n    }\n\n    if (origin.index == 1 && destination.index == 2) {\n      this.setState({ cityState: 'hidden', compassState: 'visible', skyColor: coverageColor })\n    } else if (origin.index == 2 && destination.index == 1) {\n      this.setState({ cityState: 'visible', compassState: 'hidden', skyColor: nightColor })\n    }\n\n    if (origin.index == 2 && destination.index == 3) {\n      this.setState({ skyColor: skyblueColor })\n    } else if (origin.index == 3 && destination.index == 2) {\n      this.setState({ skyColor: coverageColor })\n    }\n  }\n  componentDidMount() {\n    this.setState({ sunState: 'rot' })\n  }\n  renderContent() {\n    const sunURL = 'url(' + process.env.PUBLIC_URL + '/sun.svg' + ')'\n    const citysvgURL = 'url(' + process.env.PUBLIC_URL + '/city.svg' + ')'\n    const compasssvgURL = 'url(' + process.env.PUBLIC_URL + '/compass.svg' + ')'\n    return (\n      <SkyDiv className=\"App\" pose={this.state.skyColor} >\n        <SunBG state={this.state.sunState}/>\n        <CityBG state={this.state.cityState}/>\n        <CompassBG state={this.state.compassState}/>\n        <ReactFullpage\n          touchSensitivity={20}\n          onLeave={this.onLeave.bind(this)}\n          render={({ state, fullpageApi }) => {\n            return (\n              <ReactFullpage.Wrapper>\n                <div className=\"section\" style={{ zIndex: -2 }}>\n                  <PortraitSec />\n                </div>\n                <div className=\"section\">\n                  <FeaturesSec />\n                </div>\n                <div className=\"section\">\n                  <Coverage />\n                </div>\n                <div className=\"section\">\n                  <Writes />\n                </div>\n              </ReactFullpage.Wrapper>\n            );\n          }}\n        />\n      </SkyDiv>\n    );\n  }\n  render() {\n    return (\n      <div>\n        <Bar />\n        {this.renderContent()}\n      </div>\n\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
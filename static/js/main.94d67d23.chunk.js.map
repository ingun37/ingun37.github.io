{"version":3,"sources":["serviceWorker.js","FeaturesSec.js","PortraitSec.js","Coverage.js","Writes.js","Icons.js","Bar.js","index.js"],"names":["Boolean","window","location","hostname","match","MyGrid","width","color","img","title","desc","react_default","a","createElement","dist","columns","tabletColumns","phoneColumns","react_card_dist_default","className","concat","react_card_dist","imageUrl","process","style","height","this","renderCell","React","Component","FeaturesSec","FeaturesSec_MyGrid","PortraitSec","posed","div","_posed$div","Object","defineProperty","toString","rotate","transition","ease","duration","state","deg","_this2","setInterval","setState","maskImage","WebkitMaskImage","Coverage","es","settings","labelThreshold","defaultNodeColor","defaultLabelColor","mouseEnabled","touchEnabled","sideMargin","path","parser","require","customFields","item","keepArray","unpackthum","th","thumbnail","$","url","contents","map","c","filter","u","find","includes","err","console","error","WritesGrid","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","items","asyncToGenerator","regenerator_default","mark","_callee","feed","wrap","_context","prev","next","parseURL","sent","forEach","i","slice","stop","idx","link","open","date","key","onClick","onCardClick","square","_this3","pubDate","length","react_button_dist_default","raised","trailingIcon","react_material_icon_dist_default","icon","onMoreClick","Writes","Writes_WritesGrid","RippleWrapper","children","_props$className","initRipple","otherProps","unbounded","objectWithoutProperties","classes","assign","ref","Icon","_props$img","_props$color","svgpath","backgroundColor","Icons_RippleWrapper","Bar","_React$Component","apply","arguments","inherits","createClass","value","href","react_top_app_bar_dist_default","shortCollapsed","react_top_app_bar_dist","navIcon","tabIndex","hasRipple","onMail","onGithub","onWordpress","dayColor","SkyDiv","src_posed$div","RotatingDiv","unrotated","scale","type","rotated","disappeared","CompassDiv","visible","hidden","App","cityState","skyColor","compassState","origin","destination","direction","log","index","pose","src_RotatingDiv","opacity","react_fullpage_default","onLeave","bind","navigation","render","_ref","fullpageApi","Wrapper","zIndex","src_PortraitSec_0","src_FeaturesSec_0","src_Coverage_0","src_Writes_0","Bar_Bar","renderContent","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94d67d23.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\nimport \"./FeaturesSec.scss\"\nimport \"./contentpanel.scss\"\nimport \"./cards.scss\"\nimport \"./font.scss\"\n\nimport Card, {\n    CardPrimaryContent,\n    CardMedia,\n    CardActions,\n    CardActionButtons,\n    CardActionIcons\n} from \"@material/react-card\";\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\n\nclass MyGrid extends React.Component {\n    renderCell(width, color, img, title, desc) {\n        return (\n            <Cell columns={width} tabletColumns={12} phoneColumns={12}>\n                <Card className={`MyCard roundcard ${color}`} >\n                    <CardMedia imageUrl={process.env.PUBLIC_URL + `/${img}.svg`} style={{height:\"100%\"}}>\n                        <div className=\"blackDiv\">\n                            <div className='sectionh2 head'>{title}</div>\n                            <div className='mdc-typography--caption sub'>{desc}</div>\n                        </div>\n                    </CardMedia>\n                </Card>\n            </Cell>\n        );\n    }\n    render() {\n        return (\n            <div className=\"MyGrid\">\n                <Grid>\n                    <Row>\n                        {this.renderCell(4, 'greencard', \"bridge\", \"Global\", \"전 세계 개발자들과의 활발한 소통\")}\n                        {this.renderCell(4, 'pinkcard', \"glasses\", \"Good Hipster\", \"신뢰할 수 있는 앞서가는 정보력\")}\n                        {this.renderCell(4, 'bluecard', \"flash\", \"Quick\", \"언제나 빠른 이해, 생각, 행동\")}\n                        {this.renderCell(6, 'bluecard', \"runner\", \"Discipline\", \"어려운것, 모르는것은 지금 당장 공부해서 치워야하는 똥\")}\n                        {this.renderCell(6, 'pinkcard', \"saber\", \"Young Jedi\", \"12년의 경험: 꼬마시절부터 걷기시작한 개발자의 길\")}\n                    </Row>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nclass FeaturesSec extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"sectiontitle\">I BE LIKE</div>\n                <div className=\"gridWrapper contentpanel\">\n                    <MyGrid />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FeaturesSec;\n","import React from 'react';\nimport \"./PortraitSec.scss\"\nimport \"./contentpanel.scss\"\nimport posed from \"react-pose\";\nconst deg15 = 15\nconst deg0 = 0\n\nconst RotatingDiv = posed.div({\n    [deg0.toString()]: { rotate: deg0, transition: { ease: 'linear', duration: 0 } },\n    [deg15.toString()]: { rotate: deg15, transition: { ease: 'linear', duration: 0 } }\n});\n\nclass PortraitSec extends React.Component {\n    state = { deg: 0 }\n    componentDidMount() {\n        setInterval(() => {\n            this.setState({ deg: this.state.deg == deg0 ? deg15 : deg0 })\n        }, 300);\n    }\n    render() {\n        const svgpath = process.env.PUBLIC_URL + '/face.svg'\n\n        return (\n            <div className='PortraitSec'>\n                        <div className='sectiontitle title'>WHAT KIND OF</div>\n                        <div className=\"PortraitImage\" style={{ maskImage: `url(${svgpath})`, WebkitMaskImage: `url(${svgpath})` }} />\n                        <div className='sectiontitle title'>DEVELOPER AM I?</div>\n            </div>\n        );\n    }\n}\n\nexport default PortraitSec;\n\n//{/* <RotatingDiv pose={this.state.deg.toString()} className=\"Sun\" style={{ maskImage: `url(${svgpath})`, WebkitMaskImage: `url(${svgpath})`, zIndex: -1}} /> */}","import React from 'react';\nimport \"./Coverage.scss\"\nimport \"./contentpanel.scss\"\nimport \"./font.scss\"\nimport { Sigma, RandomizeNodePositions, RelativeSize, LoadJSON } from 'react-sigma';\n\nclass Coverage extends React.Component {\n    render() {\n        const setting = {\n            labelThreshold: 0,\n            defaultNodeColor: 'rgb(233, 229, 16)',\n            defaultLabelColor: 'rgb(236, 194, 210)',\n            mouseEnabled: false,\n            touchEnabled: false,\n            sideMargin: 0.6,\n            // font: 'Roboto',\n        }\n        return (\n            <div className=\"Coverage\">\n                <h1 className=\"sectiontitle\">COVERAGE</h1>\n                <div className=\"contentpanel coveragepanel\">\n                    <Sigma settings={setting} >\n                        <LoadJSON path={process.env.PUBLIC_URL + \"/graph-data.json\"} />\n                    </Sigma>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Coverage;","import React from 'react';\nimport \"./Writes.scss\"\nimport \"./cards.scss\"\nimport \"./contentpanel.scss\"\nimport IconButton from '@material/react-icon-button';\nimport MaterialIcon from '@material/react-material-icon';\nimport Card, {\n    CardPrimaryContent,\n    CardMedia,\n} from \"@material/react-card\";\nimport Button from '@material/react-button';\n\nlet Parser = require('rss-parser');\nlet parser = new Parser({\n    customFields: {\n        item: [\n            ['media:thumbnail', 'thumbnail'],\n            ['media:content', 'contents', { keepArray: true }],\n        ],\n    }\n});\nfunction unpackthum(item) {\n    try {\n        const th = ((item.thumbnail || {}).$ || {}).url || null;\n        if (th) return th;\n        return item.contents.map(c => (c.$ || {}).url).filter(u => u).find(u => u.includes('.png') || u.includes('.jpg')) || null\n    } catch (err) {\n        console.error(err)\n        return null\n    }\n}\nclass WritesGrid extends React.Component {\n    state = { items: [] }\n    constructor(props) {\n        super(props);\n\n        (async () => {\n            let feed = await parser.parseURL(process.env.PUBLIC_URL + `/wordpress-rss.xml`);\n            let items = feed.items;\n            items.forEach(i => i.thumbnail = unpackthum(i))\n            this.setState({\n                items: items.filter(i => i.thumbnail).slice(0, 6)\n            })\n        })();\n    }\n    onCardClick(idx) {\n        const url = this.state.items[idx].link;\n        window.open(url, '_blank');\n    }\n    onMoreClick() {\n        const url = 'https://ingun37.wordpress.com';\n        window.open(url, '_blank');\n    }\n    renderCell(idx, img, title, date) {\n        return (\n            <Card key={idx.toString()} className='writecard roundcard'>\n                <CardPrimaryContent onClick={() => this.onCardClick(idx)}>\n                    <CardMedia square imageUrl={img} />\n                    <span className='writetitle'>{title}</span>\n                    <span className='writedate'>{date}</span>\n                </CardPrimaryContent>\n            </Card>\n        );\n    }\n    render() {\n        return (\n            <div className='horizdiv'>\n                {this.state.items.map((item, idx) => this.renderCell(idx, item.thumbnail, item.title, item.pubDate.slice(0, 'Tue, 02 Apr 2019'.length)))}\n                <div className='morediv'>\n                    <h1 className='moretitle'></h1>\n                    <Button className='morebutton' raised={true} trailingIcon={<MaterialIcon icon='forward' />} onClick={this.onMoreClick}>\n                        SEE MORE\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Writes extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1 className='sectiontitle'>I WRITE THINGS</h1>\n                <div className=\"Writes contentpanel\">\n                    <WritesGrid />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Writes;","import React from 'react';\nimport Octicon, { iconsByName } from '@githubprimer/octicons-react'\nimport './Icons.scss'\nimport { withRipple } from '@material/react-ripple';\n\nconst RippleWrapper = (props) => {\n  const {\n    children,\n    className = '',\n    // You must call `initRipple` from the root element's ref. This attaches the ripple\n    // to the element.\n    initRipple,\n    // include `unbounded` to remove warnings when passing `otherProps` to the\n    // root element.\n    unbounded,\n    ...otherProps\n  } = props;\n\n  // any classes needed on your component needs to be merged with\n  // `className` passed from `props`.\n  const classes = `ripple-icon-component ${className}`;\n\n  return (\n    <div\n      className={classes}\n      ref={initRipple}\n      {...otherProps}>\n      {children}\n    </div>\n  );\n};\n\nexport function Icon(props) {\n  const {\n    img = 'github',\n    color = 'red',\n    onClick,\n  } = props;\n  const svgpath = 'url(' + process.env.PUBLIC_URL + `/${img}.svg)`\n  const style = { maskImage: svgpath, WebkitMaskImage: svgpath, backgroundColor: color}\n  return (\n    <RippleWrapper className='ripplewrapper' onClick={onClick}>\n      <div className='iconwrapper'>\n        <div className='iconimg' style={style}/>\n      </div>\n    </RippleWrapper>\n  )\n}\n\n//src={}\n/*\n<Github onClick={()=>{console.log('yeah!')}}>\n                <img src={process.env.PUBLIC_URL + `/face.svg`} style={{width:'100%', height:'100%'}} />\n              </Github>\n*/","import React from 'react';\nimport '@material/react-top-app-bar/index.scss';\nimport '@material/react-material-icon/index.scss';\nimport TopAppBar, {\n  TopAppBarFixedAdjust,\n  TopAppBarIcon,\n  TopAppBarRow,\n  TopAppBarSection,\n  TopAppBarTitle,\n} from '@material/react-top-app-bar';\nimport MaterialIcon from '@material/react-material-icon';\nimport { Icon } from \"./Icons\";\n\nexport class Bar extends React.Component {\n  onMail() {\n    window.location.href = `mailto:ingun37@gmail.com`;\n  }\n  onGithub() {\n    window.open(\"https://github.com/ingun37\", '_blank');\n  }\n  onWordpress() {\n    window.open(\"https://ingun37.wordpress.com\", '_blank');\n  }\n  render() {\n    return (\n      <TopAppBar shortCollapsed={true} style={{ width: '144px' }}>\n        <TopAppBarRow>\n          <TopAppBarIcon navIcon tabIndex={0}>\n            <MaterialIcon hasRipple icon='email' onClick={this.onMail} />\n          </TopAppBarIcon>\n          <TopAppBarIcon navIcon >\n            <Icon img=\"github\" color=\"white\" onClick={this.onGithub} />\n          </TopAppBarIcon>\n          <TopAppBarIcon navIcon >\n            <Icon img=\"wordpress\" color=\"white\" onClick={this.onWordpress} />\n          </TopAppBarIcon>\n        </TopAppBarRow>\n      </TopAppBar>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport FeaturesSec from \"./FeaturesSec\";\nimport PortraitSec from \"./PortraitSec\";\nimport Coverage from \"./Coverage\";\nimport Writes from \"./Writes\";\nimport posed from \"react-pose\";\n\nimport {Bar} from \"./Bar.js\";\n\nconst dayColor = \"rgb(218, 199, 30)\"\nconst nightColor = \"rgb(11, 16, 77)\"\nconst coverageColor = 'rgb(226, 139, 153)'\nconst skyblueColor = 'rgb(141, 191, 211)'\n\n\nconst SkyDiv = posed.div({\n  [dayColor]: { backgroundColor: dayColor },\n  [nightColor]: { backgroundColor: nightColor },\n  [coverageColor]: { backgroundColor: coverageColor },\n  [skyblueColor]: { backgroundColor: skyblueColor },\n})\n\nconst RotatingDiv = posed.div({\n  unrotated: { scale: 1, rotate: 0, transition: { type: 'spring', ease: 'easeInOut', duration: 1000 } },\n  rotated: { scale: 1, rotate: 180, transition: { type: 'spring', ease: 'easeInOut', duration: 1000 } },\n  disappeared: { scale: 0, rotate: 360, transition: { ease: 'linear', duration: 500 } },\n});\n\nconst CompassDiv = posed.div({\n  visible: {\n    scale: 1, rotate: 180,\n    transition: {\n      scale: {\n        ease: 'linear',\n        duration: 500\n      },\n      rotate: {\n        type: 'spring',\n        duration: 500\n      }\n    }\n  },\n  hidden: { scale: 0, rotate: 0, transition: { ease: 'linear', duration: 500 } },\n});\n\nclass App extends React.Component {\n  state = { cityState: 'unrotated', skyColor: dayColor, compassState: 'hidden' }\n\n  onLeave(origin, destination, direction) {\n    console.log('onLeave', { origin, destination, direction });\n    if (origin.index == 0 && destination.index == 1) {\n      this.setState({ cityState: 'rotated', skyColor: nightColor })\n    } else if (origin.index == 1 && destination.index == 0) {\n      this.setState({ cityState: 'unrotated', skyColor: dayColor })\n    }\n\n    if (origin.index == 1 && destination.index == 2) {\n      this.setState({ cityState: 'disappeared', compassState: 'visible', skyColor: coverageColor })\n    } else if (origin.index == 2 && destination.index == 1) {\n      this.setState({ cityState: 'rotated', compassState: 'hidden', skyColor: nightColor })\n    }\n\n    if (origin.index == 2 && destination.index == 3) {\n      this.setState({ skyColor: skyblueColor })\n    } else if (origin.index == 3 && destination.index == 2) {\n      this.setState({ skyColor: coverageColor })\n    }\n  }\n\n  renderContent() {\n    const citysvgURL = 'url(' + process.env.PUBLIC_URL + '/city.svg' + ')'\n    const compasssvgURL = 'url(' + process.env.PUBLIC_URL + '/compass.svg' + ')'\n    return (\n      <SkyDiv className=\"App\" pose={this.state.skyColor} >\n        <RotatingDiv className=\"MyBG\"\n          pose={this.state.cityState}\n          style={{ \"maskImage\": citysvgURL, \"WebkitMaskImage\": citysvgURL, backgroundColor: 'rgb(223, 29, 62)' }}\n        />\n        <CompassDiv className=\"MyBG\"\n          pose={this.state.compassState}\n          style={{ \"maskImage\": compasssvgURL, \"WebkitMaskImage\": compasssvgURL, backgroundColor: 'rgb(223, 29, 62)', opacity: 0.2 }}\n        />\n        <ReactFullpage\n          onLeave={this.onLeave.bind(this)}\n          navigation={true}\n          render={({ state, fullpageApi }) => {\n            return (\n              <ReactFullpage.Wrapper>\n                <div className=\"section\" style={{ zIndex: -2 }}>\n                  <PortraitSec />\n                </div>\n                <div className=\"section\">\n                  <FeaturesSec />\n                </div>\n                <div className=\"section\">\n                  <Coverage />\n                </div>\n                <div className=\"section\">\n                  <Writes />\n                </div>\n              </ReactFullpage.Wrapper>\n            );\n          }}\n        />\n      </SkyDiv>\n    );\n  }\n  render() {\n    return (\n      <div>\n        <Bar />\n        {this.renderContent()}\n      </div>\n\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
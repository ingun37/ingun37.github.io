{"version":3,"sources":["FeaturesSec.scss","index.scss","serviceWorker.js","FeaturesSec.js","PortraitSec.js","BrandsMarquee.js","Coverage.js","Writes.js","Icons.js","Bar.js","BGs.js","index.js","Coverage.scss","BGs.scss"],"names":["module","exports","desktopbp","writebgcolor","Boolean","window","location","hostname","match","desktopBreakpoint","parseInt","scss","shift","MyCell","withSizes","_ref","isDesktop","width","props","color","img","title","desc","react_default","a","createElement","dist","columns","tabletColumns","phoneColumns","react_card_dist_default","className","concat","react_card_dist","imageUrl","process","style","height","DesktopCell","MobileCell","MyGrid","FeaturesSec","React","Component","PortraitSec","maskImage","WebkitMaskImage","lapsRan","require","Object","toConsumableArray","Array","keys","MarqueeDiv","screenWidth","posed","div","staying","x","transition","ease","duration","moving","_ref2","type","values","map","flat","times","BrandsMarquee","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","ran","pose","onPage","brandnum","idx","index_es","src","toString","Coverage","nodecolor","labelcolor","BrandsMarquee_BrandsMarquee","parser","customFields","item","keepArray","MenuItem","date","square","Arrow","text","Writes","_this","call","rssContent","parseURL","onSelect","state","items","length","onMoreClick","onCardClick","_this2","then","feed","forEach","i","thumbnail","th","$","url","contents","c","filter","u","find","includes","err","console","error","unpackthum","setState","slice","link","open","rssItemlist","menu","Writes_MenuItem","pubDate","build_default","data","RippleWrapper","children","_props$className","initRipple","otherProps","unbounded","objectWithoutProperties","classes","assign","ref","Icon","_props$img","_props$color","onClick","svgpath","backgroundColor","Icons_RippleWrapper","Bar","href","react_top_app_bar_dist_default","shortCollapsed","react_top_app_bar_dist","navIcon","tabIndex","react_material_icon_dist_default","hasRipple","icon","onMail","onGithub","onWordpress","BGDiv","visible","opacity","scale","rotate","rot","n","arr","hidden","fadeaway","SunBG","CityBG","CompassBG","screenHeight","setting","labelThreshold","defaultNodeColor","defaultLabelColor","mouseEnabled","touchEnabled","sideMargin","heightPx","log","es","settings","renderer","path","dayColor","SkyDiv","_posed$div","defineProperty","App","sunState","cityState","skyColor","compassState","currentIndex","origin","destination","direction","index","BGs_SunBG","react_fullpage_default","touchSensitivity","onLeave","bind","render","fullpageApi","Wrapper","zIndex","src_PortraitSec_0","src_FeaturesSec_0","src_Coverage_0","src_Writes_0","Bar_Bar","renderContent","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a4957f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"desktopbp\":\"840px\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"writebgcolor\":\"#b7c0c2\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\nimport { default as scss } from \"./FeaturesSec.scss\"\nimport \"./contentpanel.scss\"\nimport \"./cards.scss\"\nimport \"./font.scss\"\nimport withSizes from 'react-sizes'\n\nimport Card, {\n    CardPrimaryContent,\n    CardMedia,\n    CardActions,\n    CardActionButtons,\n    CardActionIcons\n} from \"@material/react-card\";\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\n\nfunction DesktopCell(props) {\n    const {\n        width, color, img, title, desc\n    } = props;\n    return (\n        <Cell columns={width} tabletColumns={12} phoneColumns={12}>\n            <Card className={`MyCard DesktopCard roundcard ${color}`} >\n                <CardMedia imageUrl={process.env.PUBLIC_URL + `/${img}.svg`} style={{ height: \"100%\" }}>\n                    <div className=\"blackDiv\">\n                        <div className='sectionh2 head'>{title}</div>\n                        <div className='mdc-typography--caption sub'>{desc}</div>\n                    </div>\n                </CardMedia>\n            </Card>\n        </Cell>\n    )\n}\n\nfunction MobileCell(props) {\n    const {\n        color, img, title, desc\n    } = props;\n    return (\n        <Cell columns={12} tabletColumns={12} phoneColumns={12}>\n            <Card className={`MyCard MobileCard roundcard ${color}`} >\n                <CardMedia imageUrl={process.env.PUBLIC_URL + `/${img}.svg`} style={{ height: \"100%\" }}>\n                    <div className=\"blackDiv\">\n                        <div className='sectionh2 head'>{title}</div>\n                        <div className='mdc-typography--caption sub'>{desc}</div>\n                    </div>\n                </CardMedia>\n            </Card>\n        </Cell>\n    )\n}\nconst desktopBreakpoint = parseInt(scss.desktopbp.match(/^\\d+/g).shift() || '840')\n\nconst mapSizesToProps = ({ width }) => ({\n    isDesktop: width >= desktopBreakpoint,\n})\n\nfunction CondCell(props) {\n    if (props.isDesktop) {\n        return DesktopCell(props)\n    } else {\n        return MobileCell(props)\n    }\n}\n\nconst MyCell = withSizes(mapSizesToProps)(CondCell)\n\nfunction MyGrid() {\n    return (\n        <Grid className='featuresgrid'>\n            <Row>\n                <MyCell width={4} color='greencard' img='bridge' title='Global' desc='전 세계 개발자들과의 활발한 소통' />\n                <MyCell width={4} color='pinkcard' img='glasses' title='Good Hipster' desc='앞서가는 정보력' />\n                <MyCell width={4} color='bluecard' img='flash' title='Quick' desc='빠른 이해, 생각, 행동' />\n                <MyCell width={6} color='bluecard' img='runner' title='Discipline' desc='어려운것, 모르는것은 지금 당장 공부해서 치워야하는 똥' />\n                <MyCell width={6} color='pinkcard' img='saber' title='Young Jedi' desc='12년의 경험: 꼬마시절부터 걷기시작한 개발자의 길' />\n            </Row>\n        </Grid>\n    );\n}\n\nclass FeaturesSec extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"sectiontitle\">I BE LIKE</div>\n                <div className=\"gridWrapper contentpanel\">\n                    <MyGrid />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FeaturesSec;\n","import React from 'react';\nimport \"./PortraitSec.scss\"\nimport \"./contentpanel.scss\"\nimport posed from \"react-pose\";\n\nclass PortraitSec extends React.Component {\n    render() {\n        const svgpath = process.env.PUBLIC_URL + '/face.svg'\n\n        return (\n            <div className='PortraitSec'>\n                <div className='sectiontitle title'>INTRODUCING</div>\n                <div className='centerer'>\n                    <div className='circle'>\n                    <div className=\"PortraitImage\" style={{ maskImage: `url(${svgpath})`, WebkitMaskImage: `url(${svgpath})` }} />\n                    </div>\n                </div>\n                <div className='sectiontitle title'>JON IN GUN</div>\n            </div>\n        );\n    }\n}\n\nexport default PortraitSec;","import React from 'react';\nimport './BrandsMarquee.scss'\nimport posed from \"react-pose\";\nimport withSizes from 'react-sizes'\nimport Image from 'react-shimmer'\n\nvar Marquee = require('react-marquee');\nconst brandnum = 18;\nconst laps = 1;\nconst lapsRan = [...new Array(laps).keys()];\nconst mapSizesToProps = ({ width }) => ({\n  screenWidth: width,\n})\nconst MarqueeDiv = withSizes(mapSizesToProps)(posed.div({\n  staying: {\n    x: 0,\n    transition: {\n      ease: 'linear',\n      duration: 0\n    }\n  },\n  moving: {\n    x: 0,\n    transition: ({ screenWidth }) => ({\n      x: {\n        type: 'keyframes',\n        values: lapsRan.map(x => [0, -(100 * brandnum - screenWidth)]).flat().concat([0]), //[0, -100, 0],\n        times: lapsRan.map(x => [2 * x, 2 * x + 1]).flat().map(x => x / 2 / laps).concat([1]), //[0, 0.5, 1],\n        duration: 100000,\n      }\n    })\n  },\n}));\nfunction renderImg() {\n  return (\n    <Image\n        src=\"https://example.com/test.jpg\"\n        width={640} height={480}\n        style={{ objectFit: 'cover' }}\n      />\n  )\n}\nexport class BrandsMarquee extends React.Component {\n  render() {\n    let ran = [...new Array(brandnum).keys()]\n    return (\n      <MarqueeDiv pose={(this.props.onPage || false) ? 'moving' : 'staying'} screenWidth={100} className='marqueecontainer' style={{ width: `${brandnum * 100}px` }}>\n        {ran.map(idx => (<Image width={100} height={100} src={`${process.env.PUBLIC_URL}/brands/${idx}.png`} key={idx.toString()} className='marqueeitem' />))}\n      </MarqueeDiv>\n    );\n  }\n}\n","import React from 'react';\nimport { default as scss } from \"./Coverage.scss\"\nimport \"./contentpanel.scss\"\nimport \"./font.scss\"\nimport {BrandsMarquee} from './BrandsMarquee'\nclass Coverage extends React.Component {\n    render() {\n        const setting = {\n            labelThreshold: 0,\n            defaultNodeColor: scss.nodecolor,\n            defaultLabelColor: scss.labelcolor,\n            mouseEnabled: false,\n            touchEnabled: false,\n            sideMargin: 0.6,\n            // font: 'Roboto',\n        }\n        return (\n            <div className=\"Coverage\">\n                <h1 className=\"sectiontitle coveragetitle\">COVERAGE</h1>\n                <div className=\"contentpanel coveragepanel\">\n                    <div className='sectionh3 coveragesubtitle'>COUNTLESS EXPERIENCES ON 3D-GRAHPICS, GAME, MOBILE, FULLSTACK, AND MANY OTHERS</div>\n                    <BrandsMarquee onPage={this.props.onPage || false}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Coverage;","import React from 'react';\nimport \"./Writes.scss\"\nimport \"./cards.scss\"\nimport \"./contentpanel.scss\"\nimport IconButton from '@material/react-icon-button';\n\nimport MaterialIcon from '@material/react-material-icon';\nimport Card, {\n    CardPrimaryContent,\n    CardMedia,\n} from \"@material/react-card\";\nimport Button from '@material/react-button';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\n\nlet Parser = require('rss-parser');\nlet parser = new Parser({\n    customFields: {\n        item: [\n            ['media:thumbnail', 'thumbnail'],\n            ['media:content', 'contents', { keepArray: true }],\n        ],\n    }\n});\nfunction unpackthum(item) {\n    try {\n        const th = ((item.thumbnail || {}).$ || {}).url || null;\n        if (th) return th;\n        return item.contents.map(c => (c.$ || {}).url).filter(u => u).find(u => u.includes('.png') || u.includes('.jpg')) || null\n    } catch (err) {\n        console.error(err)\n        return null\n    }\n}\n\nconst MenuItem = ({ idx, img, title, date }) => {\n    return (\n        <Card key={idx.toString()} className='writecard roundcard'>\n            <CardMedia square imageUrl={img} />\n            <span className='writetitle'>{title}</span>\n            <span className='writedate'>{date}</span>\n        </Card>\n    );\n};\n\nexport const Menu = (rssItemlist) =>\n    rssItemlist.map((item, idx) => {\n        return <MenuItem idx={idx} key={idx.toString()} img={item.thumbnail} title={item.title} date={item.pubDate.slice(0, 'Tue, 02 Apr 2019'.length)} />;\n    }).concat([(\n        <div className='morediv ' key={rssItemlist.length.toString()}>\n            <div className='sectionh3 moretitle'>CHECK OUT MORE</div>\n            \n        </div>\n    )]);\n\n\nconst Arrow = ({ text, className }) => {\n    return (\n        <div\n            className={className}\n        >{text}</div>\n    );\n};\n\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\n\nclass Writes extends React.Component {\n    rssContent = parser.parseURL(process.env.PUBLIC_URL + `/wordpress-rss.xml`)\n    constructor(props) {\n        super(props);\n        // call it again if items count changes\n        this.state = { items: [] }\n    }\n    componentDidMount() {\n        this.rssContent.then(feed => {\n            let items = feed.items;\n            items.forEach(i => i.thumbnail = unpackthum(i))\n            this.setState({\n                items: items.filter(i => i.thumbnail).slice(0, 6)\n            })\n        })\n    }\n    onCardClick(idx) {\n        const url = this.state.items[idx].link;\n        window.open(url, '_blank');\n    }\n    onMoreClick() {\n        const url = 'https://ingun37.wordpress.com';\n        window.open(url, '_blank');\n    }\n    onSelect = key => {\n        const idx = parseInt(key)\n        if (idx == this.state.items.length) {\n            this.onMoreClick()\n        } else {\n            this.onCardClick(idx)\n        }\n    }\n    render() {\n        // Create menu from items\n        const menu = Menu(this.state.items);\n        return (\n            <div>\n                <h1 className='sectiontitle writetitle'>I WRITE THINGS</h1>\n                <div className=\"Writes contentpanel\">\n                    <ScrollMenu\n                        data={menu}\n                        onSelect={this.onSelect}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Writes;","import React from 'react';\nimport Octicon, { iconsByName } from '@githubprimer/octicons-react'\nimport './Icons.scss'\nimport { withRipple } from '@material/react-ripple';\n\nconst RippleWrapper = (props) => {\n  const {\n    children,\n    className = '',\n    // You must call `initRipple` from the root element's ref. This attaches the ripple\n    // to the element.\n    initRipple,\n    // include `unbounded` to remove warnings when passing `otherProps` to the\n    // root element.\n    unbounded,\n    ...otherProps\n  } = props;\n\n  // any classes needed on your component needs to be merged with\n  // `className` passed from `props`.\n  const classes = `ripple-icon-component ${className}`;\n\n  return (\n    <div\n      className={classes}\n      ref={initRipple}\n      {...otherProps}>\n      {children}\n    </div>\n  );\n};\n\nexport function Icon(props) {\n  const {\n    img = 'github',\n    color = 'red',\n    onClick,\n  } = props;\n  const svgpath = 'url(' + process.env.PUBLIC_URL + `/${img}.svg)`\n  const style = { maskImage: svgpath, WebkitMaskImage: svgpath, backgroundColor: color}\n  return (\n    <RippleWrapper className='ripplewrapper' onClick={onClick}>\n      <div className='iconwrapper'>\n        <div className='iconimg' style={style}/>\n      </div>\n    </RippleWrapper>\n  )\n}\n\n//src={}\n/*\n<Github onClick={()=>{console.log('yeah!')}}>\n                <img src={process.env.PUBLIC_URL + `/face.svg`} style={{width:'100%', height:'100%'}} />\n              </Github>\n*/","import React from 'react';\nimport '@material/react-top-app-bar/index.scss';\nimport '@material/react-material-icon/index.scss';\nimport TopAppBar, {\n  TopAppBarFixedAdjust,\n  TopAppBarIcon,\n  TopAppBarRow,\n  TopAppBarSection,\n  TopAppBarTitle,\n} from '@material/react-top-app-bar';\nimport MaterialIcon from '@material/react-material-icon';\nimport { Icon } from \"./Icons\";\n\nexport class Bar extends React.Component {\n  onMail() {\n    window.location.href = `mailto:ingun37@gmail.com`;\n  }\n  onGithub() {\n    window.open(\"https://github.com/ingun37\", '_blank');\n  }\n  onWordpress() {\n    window.open(\"https://ingun37.wordpress.com\", '_blank');\n  }\n  render() {\n    return (\n      <TopAppBar shortCollapsed={true} style={{ width: '144px' }}>\n        <TopAppBarRow>\n          <TopAppBarIcon navIcon tabIndex={0}>\n            <MaterialIcon hasRipple icon='email' onClick={this.onMail} />\n          </TopAppBarIcon>\n          <TopAppBarIcon navIcon >\n            <Icon img=\"github\" color=\"white\" onClick={this.onGithub} />\n          </TopAppBarIcon>\n          <TopAppBarIcon navIcon >\n            <Icon img=\"wordpress\" color=\"white\" onClick={this.onWordpress} />\n          </TopAppBarIcon>\n        </TopAppBarRow>\n      </TopAppBar>\n    )\n  }\n}","import React from 'react';\nimport posed from \"react-pose\";\nimport { default as scss } from './BGs.scss'\nimport { Sigma, RandomizeNodePositions, RelativeSize, LoadJSON } from 'react-sigma';\nimport withSizes from 'react-sizes'\n\nlet tot = 10\nlet ran = [...new Array(tot).keys()]\nconst BGDiv = posed.div({\n    visible: {\n        opacity: 1,\n        scale: 1, rotate: 0,\n        transition: {\n            scale: {\n                ease: 'linear',\n                duration: 500\n            },\n            rotate: {\n                type: 'spring',\n                duration: 500\n            }\n        }\n    },\n    rot: {\n        scale: 1, rotate: 0, opacity: 1,\n        transition: {\n            scale: {\n                ease: 'linear',\n                duration: 500\n            },\n            rotate: {\n                type: 'keyframes',\n                values: [0].concat(ran.map(n => n % 2 == 0 ? [0, 15] : [15, 0]).flat()),\n                times: ran.map((n, i, arr) => [n / tot, (n + 1) / tot - 0.001]).flat().concat([1]),\n                duration: 5000,\n            }\n        }\n    },\n    hidden: { scale: 0, rotate: 180, opacity: 0, transition: { ease: 'linear', duration: 500 } },\n    fadeaway: { scale: 1, rotate: 0, opacity: 0, transition: { ease: 'linear', duration: 500 } },\n});\n\nexport class SunBG extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { state: props.state }\n    }\n    componentDidMount() {\n    }\n\n    render() {\n        const sunURL = 'url(' + process.env.PUBLIC_URL + '/sun.svg' + ')'\n        return (\n            <BGDiv className=\"MyBG contain\"\n                pose={this.props.state}\n                style={{\n                    \"maskImage\": sunURL,\n                    \"WebkitMaskImage\": sunURL,\n                    backgroundColor: 'rgb(218, 199, 30)'\n                }}\n            />\n        )\n    }\n}\nexport function CityBG(props) {\n    const citysvgURL = 'url(' + process.env.PUBLIC_URL + '/city.svg' + ')'\n    return (\n        <BGDiv className=\"MyBG contain\"\n            pose={props.state}\n            style={{ \"maskImage\": citysvgURL, \"WebkitMaskImage\": citysvgURL, backgroundColor: 'rgb(223, 29, 62)' }}\n        />\n    )\n}\nconst mapSizesToProps = ({ height }) => ({\n    screenHeight: height,\n})\nfunction _CompassBG(props) {\n    const compasssvgURL = 'url(' + process.env.PUBLIC_URL + '/compass.svg' + ')'\n    const setting = {\n        labelThreshold: 0,\n        defaultNodeColor: scss.nodecolor,\n        defaultLabelColor: scss.labelcolor,\n        mouseEnabled: false,\n        touchEnabled: false,\n        sideMargin: 0.6,\n        // font: 'Roboto',\n    }\n    const heightPx = `${props.screenHeight}px`\n    console.log(\"screenh : \" + heightPx)\n    return (\n        <BGDiv className=\"MyBG contain\"\n            pose={props.state}\n        >\n            <Sigma settings={setting} renderer=\"canvas\" style={{height:heightPx}}>\n                <LoadJSON path={process.env.PUBLIC_URL + \"/graph-data.json\"} />\n            </Sigma>\n        </BGDiv>\n    )\n}\nexport let CompassBG = withSizes(mapSizesToProps)(_CompassBG)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport FeaturesSec from \"./FeaturesSec\";\nimport PortraitSec from \"./PortraitSec\";\nimport Coverage from \"./Coverage\";\nimport Writes from \"./Writes\";\nimport posed from \"react-pose\";\n\nimport { Bar } from \"./Bar\";\nimport { SunBG, CityBG, CompassBG } from './BGs'\nconst dayColor = \"rgb(223, 29, 62)\"\nconst nightColor = \"rgb(11, 16, 77)\"\nconst coverageColor = 'rgb(226, 139, 153)'\nconst skyblueColor = 'rgb(183, 192, 194)'\n\n\nconst SkyDiv = posed.div({\n  [dayColor]: { backgroundColor: dayColor },\n  [nightColor]: { backgroundColor: nightColor },\n  [coverageColor]: { backgroundColor: coverageColor },\n  [skyblueColor]: { backgroundColor: skyblueColor },\n})\n\nclass App extends React.Component {\n  state = {\n    sunState: 'hidden', cityState: 'hidden', skyColor: dayColor, compassState: 'hidden', currentIndex: 0\n  }\n\n  onLeave(origin, destination, direction) {\n    console.log('onLeave', { origin, destination, direction });\n    if (origin.index == 0 && destination.index == 1) {\n      this.setState({ sunState: 'fadeaway', cityState: 'visible', skyColor: nightColor, currentIndex: destination.index })\n    } else if (origin.index == 1 && destination.index == 0) {\n      this.setState({ sunState: 'rot', cityState: 'hidden', skyColor: dayColor, currentIndex: destination.index })\n    }\n\n    if (origin.index == 1 && destination.index == 2) {\n      this.setState({ cityState: 'hidden', compassState: 'visible', skyColor: coverageColor, currentIndex: destination.index })\n    } else if (origin.index == 2 && destination.index == 1) {\n      this.setState({ cityState: 'visible', compassState: 'hidden', skyColor: nightColor, currentIndex: destination.index })\n    }\n\n    if (origin.index == 2 && destination.index == 3) {\n      this.setState({ skyColor: skyblueColor, currentIndex: destination.index })\n    } else if (origin.index == 3 && destination.index == 2) {\n      this.setState({ skyColor: coverageColor, currentIndex: destination.index })\n    }\n  }\n  componentDidMount() {\n    this.setState({ sunState: 'rot' })\n  }\n  renderContent() {\n    const sunURL = 'url(' + process.env.PUBLIC_URL + '/sun.svg' + ')'\n    const citysvgURL = 'url(' + process.env.PUBLIC_URL + '/city.svg' + ')'\n    const compasssvgURL = 'url(' + process.env.PUBLIC_URL + '/compass.svg' + ')'\n    return (\n      <SkyDiv className=\"App\" pose={this.state.skyColor} >\n        <SunBG state={this.state.sunState} />\n        <CityBG state={this.state.cityState} />\n        <CompassBG state={this.state.compassState} />\n        <ReactFullpage\n          touchSensitivity={15}\n          onLeave={this.onLeave.bind(this)}\n          render={({ state, fullpageApi }) => {\n            return (\n              <ReactFullpage.Wrapper>\n                <div className=\"section\" style={{ zIndex: -2 }}>\n                  <PortraitSec />\n                </div>\n                <div className=\"section\">\n                  <FeaturesSec />\n                </div>\n                <div className=\"section\">\n                  <Coverage onPage={this.state.currentIndex == 2} />\n                </div>\n                <div className=\"section\">\n                  <Writes />\n                </div>\n              </ReactFullpage.Wrapper>\n            );\n          }}\n        />\n      </SkyDiv>\n    );\n  }\n  render() {\n    return (\n      <div>\n        <Bar />\n        {this.renderContent()}\n      </div>\n\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodecolor\":\"#e9e510\",\"labelcolor\":\"#ecc2d2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodecolor\":\"#e9e510\",\"labelcolor\":\"#ecc2d2\"};"],"sourceRoot":""}